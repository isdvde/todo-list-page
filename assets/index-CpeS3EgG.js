(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const s of i.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&r(s)}).observe(document,{childList:!0,subtree:!0});function l(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(t){if(t.ep)return;t.ep=!0;const i=l(t);fetch(t.href,i)}})();function c(o){return document.createElement(o)}class d extends HTMLElement{constructor(){super(),this.innerHTML="",this.$item_template=`
      <p class="todo__item__p"></p>
      <button class="btn btn-red btn-small"> X </button>
    `,this.classList.add("todo__content"),this.todo=[]}create_item(){let e=c("div");e.classList.add("todo__item"),e.innerHTML=this.$item_template}add_item(e){this.value=e,this.append(this.create_item())}render(){this.todo}}customElements.define("x-todo-list",d);class a extends HTMLElement{constructor(e){super(),this.innerHTML=`
      <input type="text" class="input">
      <button class="btn btn-green">Agregar</button>
    `,this.classList.add("todo__form"),this.$input=this.querySelector("input"),this.$button=this.querySelector("button"),this.value="",this.$input.oninput=this.update_value.bind(this)}update_value(){this.value=this.get_value()}clean(){this.$input.value=""}get_value(){return this.$input.value}}customElements.define("x-input",a);document.querySelector("#root");let u=document.querySelector("x-todo-list"),n=document.querySelector("x-input");n.$button.onclick=function(o){let e=n.value;n.clean(),u.add_item(e)};u.create_item();
